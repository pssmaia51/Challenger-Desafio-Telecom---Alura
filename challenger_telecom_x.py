# -*- coding: utf-8 -*-
"""Challenger Telecom X.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WECxX0fsS6RmljjaglwcakAdBp6E1JDo
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import requests
import json

# Caminho do arquivo JSON neste ambiente
file_path = "//content/TelecomX_Data.json"

# Carregar e normalizar os dados
with open(file_path, "r") as f:
    raw_data = json.load(f)

df = pd.json_normalize(raw_data, sep="_")

# Converter campos numéricos
df["account_Charges_Total"] = pd.to_numeric(df["account_Charges_Total"], errors="coerce")
df["account_Charges_Monthly"] = pd.to_numeric(df["account_Charges_Monthly"], errors="coerce")

# Visualizar as primeiras linhas para confirmar
df.head()

# Recarregar bibliotecas e dados após o reset do ambiente
import pandas as pd
import json
import seaborn as sns
import matplotlib.pyplot as plt

# Reaplicar estilo
sns.set_theme(style="whitegrid")
plt.rcParams["figure.figsize"] = (10, 6)

# Recarregar o JSON
file_path = "//content/TelecomX_Data.json"
with open(file_path, "r") as f:
    raw_data = json.load(f)

# Normalizar dados
df = pd.json_normalize(raw_data, sep="_")
df["account_Charges_Total"] = pd.to_numeric(df["account_Charges_Total"], errors="coerce")
df["account_Charges_Monthly"] = pd.to_numeric(df["account_Charges_Monthly"], errors="coerce")

# 1. Distribuição de Churn
sns.countplot(x="Churn", data=df, palette="Set2")
plt.title("Distribuição de Clientes - Churn (Evasão)")
plt.tight_layout()
plt.show()

# 2. Boxplot: Gasto Total vs Churn
sns.boxplot(x="Churn", y="account_Charges_Total", data=df, palette="Set3")
plt.title("Gasto Total por Cliente vs Churn")
plt.tight_layout()
plt.show()

# 3. Boxplot: Tempo de Contrato (tenure) vs Churn
sns.boxplot(x="Churn", y="customer_tenure", data=df, palette="Set1")
plt.title("Tempo de Contrato (Tenure) vs Churn")
plt.tight_layout()
plt.show()

# 4. Churn por Tipo de Contrato
sns.countplot(data=df, x="account_Contract", hue="Churn", palette="pastel")
plt.title("Churn por Tipo de Contrato")
plt.xticks(rotation=30)
plt.tight_layout()
plt.show()

